@{
  Layout = "_Layout";
}

@model ToDoList.Models.Item // model directive

<h2>Item Details</h2> @*DisplayNameFor displays property name/ DisplayFor displays the value of that property*@
<hr />
<h3>@Html.DisplayNameFor(model => model.Description): @Html.DisplayFor(model => model.Description)<h3>
@*                       equates to "Description: 'Wash Dishes'" *@
<br>
@if(@Model.Categories.Count == 0)
{
  <p>This item does not belong to any categories</p>
}
else
{
  <h4>Categories the item belongs to:</h4>
  <ul>
    @foreach(var join in Model.Categories)
    {
      <p>@join.Category.Name</p>
      @using (Html.BeginForm("DeleteCategory", "Items")) //("Items" == "ItemsContoller")
      {
        @Html.Hidden("joinId", @join.CategoryItemId)
        <input type="submit" value="Delete" class="btn" />
      }
    }
  </ul>
}
<br>
<p>@Html.ActionLink("Edit Item", "Edit", new { id = Model.ItemId })</p>
<p>@Html.ActionLink("Delete Item", "Delete", new { id = Model.ItemId })</p>
<p>@Html.ActionLink("Add a Category", "AddCategory", new { id = Model.ItemId })</p>
<p>@Html.ActionLink("Back to list", "Index")</p> 